pipeline {

 agent any

 stages {
  stage("Code Checkout") {
   steps {
    git branch: 'master',
     url: 'https://github.com/lwwwr/backend-devops-training-project.git'
   }
  }

  stage("Build") {
   steps {
    sh './gradlew build -x test'
   }
  }

  stage("Test") {
   steps {
    sh './gradlew test'
   }
  }

  stage('Code Quality Check via SonarQube') {
   steps {
    script {
     def scannerHome = tool 'sonar';
     withSonarQubeEnv("alavr-sq") {
      withCredentials([string(credentialsId: 'alavr-sonarqube', variable: 'sonar_token')]) {
    
       sh "${tool('sonar')}/bin/sonar-scanner \
                   -Dsonar.projectKey=backend \
                   -Dsonar.host.url=http://sonar-qube.alavr.test.coherentprojects.net \
                   -Dsonar.login=${sonar_token} \
                   -Dsonar.java.binaries=./build/libs/"
      }
     } 
    }
   }
  }
 }


 
 post {
  always {
   sh "chown -R \$(stat -c '%u:%g' .) \$WORKSPACE"
   cleanWs()
  }
 }
 
}